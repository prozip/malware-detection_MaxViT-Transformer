import numpy as np
import os
from sklearn.model_selection import train_test_split
import torch
import random


def seed_everything(seed):
    random.seed(seed)
    os.environ["PYTHONHASHSEED"] = str(seed)
    np.random.seed(1)
    torch.manual_seed(seed)
    torch.cuda.manual_seed(seed)
    torch.cuda.manual_seed_all(seed)
    torch.backends.cudnn.deterministic = True


def load_collections(ds_path):
    corpus = []
    labels = []
    folders = os.listdir(ds_path)
    for idx, folder in enumerate(folders):
        files_path = ds_path + "/" + folder
        files = os.listdir(files_path)
        for file in files:
            corpus.append(files_path + "/" + file)
            labels.append(idx)
    return corpus, labels


def split_ds(corpus, labels, size, seed):
    X_train, X_test, y_train, y_test = train_test_split(
        corpus, labels, test_size=size, stratify=labels, random_state=seed
    )
    return X_train, X_test, y_train, y_test
