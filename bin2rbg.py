import os
from tqdm.contrib.concurrent import process_map
import time
import subprocess

# global var
MAX_WORKERS = 50
CHUNK_SIZE = 0.2

raw_ds = "DikeDataset"
rgb_ds = "rgb_ds"
##

def create_folder(path):
    if not os.path.exists(path):
        os.mkdir(path)

def mkfolder():
    folders = os.listdir(raw_ds)
    create_folder(rgb_ds)
    path_collections = []
    for folder in folders:
        create_folder(rgb_ds + "/" + folder)
        files = os.listdir(raw_ds + "/" + folder)
        for file in files:
            if file.endswith('.exe'):
                path_collections.append(folder + "/" + file)
    return path_collections
def run(path):
    input_path = raw_ds + "/" + path
    output_path = rgb_ds + "/" + path.split(".")[0] + ".png"
    # cmd = "python2 scurve/binvis -c entropy -t square -q {} {}".format(input_path, output_path)
    cmd = ["python2","scurve/binvis","-centropy","-t","square","-q",input_path, output_path]
    subprocess.call(cmd, shell=False)

    # os.system(cmd)


if __name__ == "__main__":
    start_time = time.time()
    input_array = mkfolder()
    print(len(input_array))

    r = process_map(run, input_array, max_workers=MAX_WORKERS, chunksize=CHUNK_SIZE)
    print("time: ", str(time.time() - start_time))